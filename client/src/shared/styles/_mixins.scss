@use "sass:map";
@use "@styles/maps";
@use "@styles/colors";

@function getBreakpointValue($value) {
  $result: map.get(maps.$grid-breakpoints, $value) or $value;
  @return $result;
}

@mixin breakpoint-up($point) {
  @media only screen and (min-width: getBreakpointValue($point)) {
    @content;
  }
}

@mixin breakpoint-down($point) {
  @media only screen and (max-width: calc(getBreakpointValue($point) - .02px)) {
    @content;
  }
}

@mixin font(
  $size: null,
  $weight: null,
  $lh: null
) {
  @if $size != null { font-size: $size; }
  font-weight: $weight;
  @if $lh != null {
    @if $lh == inherit { line-height: inherit }
    @else { line-height: $lh; }
  }
}

@mixin text-row-trim($rows) {
  display: -webkit-box;
  -webkit-line-clamp: $rows;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin scrollbar($bg-color) {
  &::-webkit-scrollbar { width: 1.5rem; }

  &::-webkit-scrollbar-thumb { /* плашка-бегунок */
    // background-color: colors.$gray-2;
    border-radius: .5rem;
    border-right: .5rem solid $bg-color;
    border-left: .5rem solid $bg-color;
  }

  // &::-webkit-scrollbar-thumb:hover {
  //   background-color: colors.$gray-1;
  // }

  &::-webkit-scrollbar-track { /* фон */
    background: transparent;
    cursor: pointer;
  }
}

@mixin responsive-grid() {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  column-gap: 1.2rem;

  @include breakpoint-up(md) {
    grid-template-columns: repeat(4, minmax(0, 1fr));
    column-gap: 2rem;
  }

  @include breakpoint-up(lg) {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }

  @include breakpoint-up(xl) {
    grid-template-columns: repeat(8, minmax(0, 1fr));
  }

  @include breakpoint-up(xxl) {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }
}
